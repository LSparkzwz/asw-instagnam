####### NAMESPACE ########

apiVersion: v1
kind: Namespace
metadata:
  name: instagnam
  labels:
    name: instagnam
---

####### INGRESS #########

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: instagnam
  namespace: instagnam
spec:
  rules:
  - host: "instagnam"
    http:
      paths:
        - path: /
          backend:
            serviceName: apigateway
            servicePort: 8080


---

###### SERVICES ########

apiVersion: v1
kind: Service
metadata:
  name: apigateway
  namespace: instagnam
spec:
  type: NodePort
  selector:
    app: instagnam
    service: apigateway
  ports:
    - name: apigateway
      protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: connessioni
  namespace: instagnam
spec:
  selector:
    app: instagnam
    service: connessioni
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: ricette
  namespace: instagnam
spec:
  selector:
    app: instagnam
    service: ricette
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: ricette-seguite
  namespace: instagnam
spec:
  selector:
    app: instagnam
    service: ricette-seguite
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: mysql-connessioni
  namespace: instagnam
spec:
  type: NodePort
  selector:
    app: instagnam
    service: mysql-connessioni
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-ricette
  namespace: instagnam
spec:
  type: NodePort
  selector:
    app: instagnam
    service: mysql-ricette
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-ricette-seguite
  namespace: instagnam
spec:
  type: NodePort
  selector:
    app: instagnam
    service: mysql-ricette-seguite
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

---

##### CONFIG MAPS #####

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-ricette-seguite
  namespace: instagnam
  labels:
    app: instagnam
    service: mysql-ricette-seguite
data:
  MYSQL_ROOT_USER: root
  MYSQL_ROOT_PASSWORD: root_password
  MYSQL_DATABASE: ricette_seguite
  MYSQL_USER: user
  MYSQL_PASSWORD: password

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-ricette
  namespace: instagnam
  labels:
    app: instagnam
    service: mysql-ricette
data:
  MYSQL_ROOT_USER: root
  MYSQL_ROOT_PASSWORD: "root_password"
  MYSQL_DATABASE: ricette
  MYSQL_USER: user
  MYSQL_PASSWORD: password

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: instagnam
  labels:
    app: instagnam
    service: mysql-connessioni
data:
  MYSQL_ROOT_USER: root
  MYSQL_ROOT_PASSWORD: "root_password"
  MYSQL_DATABASE: connessioni
  MYSQL_USER: user
  MYSQL_PASSWORD: password

---

###### DEPLOYMENTS ######

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-connessioni
  namespace: instagnam
  labels:
    app: instagnam
    service: mysql-connessioni
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: mysql-connessioni
  template:
    metadata:
      labels:
        app: instagnam
        service: mysql-connessioni
    spec:
      volumes:
      - name: data
        emptyDir: {}
      containers:
      - name: mysql-connessioni
        image: mysql:5.7
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: mysql-config
        ports:
          - containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql/

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-ricette-seguite
  namespace: instagnam
  labels:
    app: instagnam
    service: mysql-ricette-seguite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: mysql-ricette-seguite
  template:
    metadata:
      labels:
        app: instagnam
        service: mysql-ricette-seguite
    spec:
      volumes:
      - name: data-ricette-seguite
        emptyDir: {}
      containers:
      - name: mysql-ricette-seguite
        image: mysql:5.7
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: mysql-config-ricette-seguite
        ports:
          - containerPort: 3306
        volumeMounts:
        - name: data-ricette-seguite
          mountPath: /var/lib/mysql/

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-ricette
  namespace: instagnam
  labels:
    app: instagnam
    service: mysql-ricette
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: mysql-ricette
  template:
    metadata:
      labels:
        app: instagnam
        service: mysql-ricette
    spec:
      volumes:
      - name: data-ricette
        emptyDir: {}
      containers:
      - name: mysql-ricette
        image: mysql:5.7
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: mysql-config-ricette
        ports:
          - containerPort: 3306
        volumeMounts:
        - name: data-ricette
          mountPath: /var/lib/mysql/

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ricette-seguite
  namespace: instagnam
  labels:
    app: instagnam
    service: ricette-seguite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: ricette-seguite
  template:
    metadata:
      labels:
        app: instagnam
        service: ricette-seguite
    spec:
      containers:
        - name: ricette-seguite
          image: lspark/ricette-seguite-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: connessioni
  namespace: instagnam
  labels:
    app: instagnam
    service: connessioni
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: connessioni
  template:
    metadata:
      labels:
        app: instagnam
        service: connessioni
    spec:
      containers:
        - name: connessioni
          image: lspark/connessioni-service:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ricette
  namespace: instagnam
  labels:
    app: instagnam
    service: ricette
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: ricette
  template:
    metadata:
      labels:
        app: instagnam
        service: ricette
    spec:
      containers:
        - name: ricette
          image: lspark/ricette-service:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  namespace: instagnam
  labels:
    app: instagnam
    service: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: apigateway
  template:
    metadata:
      labels:
        app: instagnam
        service: apigateway
    spec:
      containers:
        - name: apigateway
          image: lspark/apigateway:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080

---

###### KAFKA AND ZOOKEEPER ######

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  namespace: instagnam
  labels:
    app: instagnam
    service: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: zookeeper
  template:
    metadata:
      labels:
        app: instagnam
        service: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: zookeeper
          imagePullPolicy: Always
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_ID
              value: "1"
            - name: ZOOKEEPER_SERVER_1
              value: zookeeper

---

apiVersion: v1
kind: Service
metadata:
  namespace: instagnam
  name: zookeeper
spec:
  selector:
    app: instagnam
    service: zookeeper
  type: NodePort
  ports:
    - name: client
      protocol: TCP
      port: 2181
    - name: follower
      protocol: TCP
      port: 2888
    - name: leader
      protocol: TCP
      port: 3888


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: instagnam
  labels:
    app: instagnam
    service: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: kafka
  template:
    metadata:
      labels:
        app: instagnam
        service: kafka
        id: "0"
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          imagePullPolicy: Always
          env:
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka-service
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CREATE_TOPICS
              value: "ricette:1:1,connessioni:1:1"
          ports:
            - containerPort: 9092
              name: kafka

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: instagnam
  labels:
    app: instagnam
    service: kafka
spec:
  type: NodePort
  selector:
    app: instagnam
    service: kafka
    id: "0"
  ports:
    - name: kafka-port
      protocol: TCP
      port: 9092

